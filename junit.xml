<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="1" failures="1" skipped="0" tests="4" time="3.999" timestamp="2023-06-26T22:14:25.774455" hostname="doanNot"><testcase classname="" name="src.tests.application.useCases.test_CadastrarCursoUseCase" time="0.000"><error message="collection failure">.tox/py310/lib/python3.10/site-packages/_pytest/runner.py:341: in from_call
    result: Optional[TResult] = func()
.tox/py310/lib/python3.10/site-packages/_pytest/runner.py:372: in &lt;lambda&gt;
    call = CallInfo.from_call(lambda: list(collector.collect()), "collect")
.tox/py310/lib/python3.10/site-packages/_pytest/python.py:531: in collect
    self._inject_setup_module_fixture()
.tox/py310/lib/python3.10/site-packages/_pytest/python.py:545: in _inject_setup_module_fixture
    self.obj, ("setUpModule", "setup_module")
.tox/py310/lib/python3.10/site-packages/_pytest/python.py:310: in obj
    self._obj = obj = self._getobj()
.tox/py310/lib/python3.10/site-packages/_pytest/python.py:528: in _getobj
    return self._importtestmodule()
.tox/py310/lib/python3.10/site-packages/_pytest/python.py:617: in _importtestmodule
    mod = import_path(self.path, mode=importmode, root=self.config.rootpath)
.tox/py310/lib/python3.10/site-packages/_pytest/pathlib.py:565: in import_path
    importlib.import_module(module_name)
/usr/lib/python3.10/importlib/__init__.py:126: in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
&lt;frozen importlib._bootstrap&gt;:1050: in _gcd_import
    ???
&lt;frozen importlib._bootstrap&gt;:1027: in _find_and_load
    ???
&lt;frozen importlib._bootstrap&gt;:1006: in _find_and_load_unlocked
    ???
&lt;frozen importlib._bootstrap&gt;:688: in _load_unlocked
    ???
.tox/py310/lib/python3.10/site-packages/_pytest/assertion/rewrite.py:178: in exec_module
    exec(co, module.__dict__)
src/tests/application/useCases/test_CadastrarCursoUseCase.py:2: in &lt;module&gt;
    from application.useCases.CadastrarCursoUseCase import CursoUseCase
src/application/useCases/CadastrarCursoUseCase.py:1: in &lt;module&gt;
    from domain.entities.Curso import Curso, CursoResponse, CursoBase, CursoRequestId
src/domain/entities/Curso.py:3: in &lt;module&gt;
    from database import Base
src/database.py:11: in &lt;module&gt;
    engine = create_engine(
&lt;string&gt;:2: in create_engine
    ???
.tox/py310/lib/python3.10/site-packages/sqlalchemy/util/deprecations.py:309: in warned
    return fn(*args, **kwargs)
.tox/py310/lib/python3.10/site-packages/sqlalchemy/engine/create.py:532: in create_engine
    u, plugins, kwargs = u._instantiate_plugins(kwargs)
E   AttributeError: 'NoneType' object has no attribute '_instantiate_plugins'</error></testcase><testcase classname="src.tests.application.controllers.test_Curso_Controller" name="test_create_controller" time="0.447"><failure message="assert 500 == 201&#10; +  where 500 = &lt;Response [500 Internal Server Error]&gt;.status_code&#10; +  and   201 = status.HTTP_201_CREATED">@pytest.mark.asyncio
    async def test_create_controller():
        data = {
        "nome": "teste",
        "descricao": "um novo teste",
        "duracaoHoras": 2
        }
    
        async with AsyncClient(base_url=HTTPS_CURSO) as async_client:
            response = await async_client.post("/curso/", json=data)
&gt;       assert response.status_code == status.HTTP_201_CREATED
E       assert 500 == 201
E        +  where 500 = &lt;Response [500 Internal Server Error]&gt;.status_code
E        +  and   201 = status.HTTP_201_CREATED

src/tests/application/controllers/test_Curso_Controller.py:19: AssertionError</failure></testcase><testcase classname="src.tests.application.controllers.test_Curso_Controller" name="test_find_all" time="1.670" /><testcase classname="src.tests.application.controllers.test_Curso_Controller" name="test_delete_curso" time="0.281" /></testsuite></testsuites>